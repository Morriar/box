
[Client] curl -s localhost:*****/api/boxes/NOTFOUND/submit
{"status":404,"message":"Box `NOTFOUND` not found"}
[Client] curl -s localhost:*****/api/boxes/BoxPep/submit
{"box":{"id":"BoxPep","title":"BoxPep","is_active":true,"closes_at":null,"tests":[{"path":"tests/test10.in","name":"test10"},{"path":"tests/test1.in","name":"test1"},{"path":"tests/test2.in","name":"test2"},{"path":"tests/test3.in","name":"test3"},{"path":"tests/test4.in","name":"test4"},{"path":"tests/test5.in","name":"test5"},{"path":"tests/test6.in","name":"test6"},{"path":"tests/test7.in","name":"test7"},{"path":"tests/test8.in","name":"test8"},{"path":"tests/test9.in","name":"test9"}],"readme":null},"user":"dev","files":[{"path":"src/romcryption.pep","content":"; Read input\nloop_in: LDA     mLength,i   ; do {\n         CALL    new         ;   X = new Node(); #mVal #mNext #mPrev\n\t\t\t\t\t\t\t ;\n         LDA     0, i\t\t ;\t A = 0\n         STA     mPrev,x     ;   X.prev = 0\n         STA     mNext,x     ;   X.next = 0\n\t\t\t\t\t\t\t ;\n         CHARI   mVal,x      ;   X.val = getChar()\n         LDBYTEA mVal,x      ;   A = X.val\n         CPA     '\\n', i\t ;\t if(A == '\\n')\n         BREQ    out         ;\t   break;\n\t\t\t\t\t\t\t ;\n         SUBA    13, i\t\t ;\t A -= 13\n         STBYTEA mVal,x      ;\t X.val = A\n         LDA     head,d      ;\n         STA     mNext,x     ;   X.next = head;\n         STX     head,d      ;   head = X;\n         LDA     head,d      ;   A = head;\n         LDX     mNext,x     ;   X = X.next;\n         CPX     0,i         ;   if(X != null) {\n         BREQ    else\t\t ;\n         STA     mPrev,x     ;       X.prev = A;\n         BR      next        ;   } else {\nelse:    STA     tail,d      ;       tail = A;\n                             ;   }\nnext:    BR      loop_in     ; } while (X.val != null)\n\t\t\t\t\t\t\t ;\n                             ;\nout:     LDX     tail,d\t\t ;\nbackward:CPX     0,i\t\t ;\n         BREQ    fin         ; for (X=head; X!=null; X=X.next) {\n         CHARO   mVal,x      ;   print(X.val)\n         LDX     mPrev,x\t ;\n         BR      backward    ; }\nfin:     STOP\t\t\t\t ;\nhead:    .BLOCK  2           ; #2h list head (null (aka 0) if empty)\ntail:    .BLOCK  2           ; #2h list tail (null (aka 0) if empty)\n;\n;******* Linked-list node structure\nmVal:    .EQUATE 0           ; #1c node value\nmNext:   .EQUATE 1           ; #2h next node (null (aka 0) for tail)\nmPrev:   .EQUATE 3           ; #2h prev node (null (aka 0) for head)\nmLength: .EQUATE 5           ; node size in bytes\n;\n;\n;******* operator new\n;        Precondition: A contains number of bytes\n;        Postcondition: X contains pointer to bytes\nnew:     LDX     hpPtr,d     ;returned pointer\n         ADDA    hpPtr,d     ;allocate from heap\n         STA     hpPtr,d     ;update hpPtr\n         RET0\nhpPtr:   .ADDRSS heap        ;address of next free byte\nheap:    .BLOCK  1           ;first byte in the heap\n\n         .END\n","filename":"romcryption.pep","extension":"pep"}],"teamate":null,"path":"data/test_api/BoxPep/submissions/1491970695000_dev","timestamp":1491970695000,"id":"1491970695000_dev","is_approuved":true}
[Client] curl -s localhost:*****/api/boxes/dev:BoxNit/submit
{"box":{"id":"dev:BoxNit","title":"BoxNit","is_active":true,"closes_at":null,"tests":[{"path":"tests/test1.in","name":"test1"},{"path":"tests/test2.in","name":"test2"}],"readme":null},"user":"dev","files":[{"path":"src/hello.nit","content":"if args.is_empty then\n\tprint \"Hello, World\"\nelse\n\tprint \"Hello {args.first}\"\nend\n","filename":"hello.nit","extension":"nit"}],"teamate":null,"path":"data/test_api/BoxNit/submissions/1491971159000_dev","timestamp":1491971159000,"id":"1491971159000_dev","is_approuved":false}
